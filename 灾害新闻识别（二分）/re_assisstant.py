# -*- coding:utf-8 -*-
# editor: zzh

import re

pattern_aiac = re.compile("((受灾)(.{0,5})(总?面积)?(已)?(合计|超过|.{0,2}至|达到?了?|.*共.?|近|逾|有|大约为|约|为|扩大到|.{0,2}估计.?)?([点一两二三四五六七八九十千百万亿零]+|[\d\.．]+)[余多]*[千万亿]*[余多]*(亩|公顷|平方公里|平方千米)[\s]*)|(([点一两二三四五六七八九十千百万亿零]+|[\d\.．]+)[余多]*[千万亿]*[余多]*(亩|公顷|平方公里|平方千米).{0,6}(不同程度)?(受灾))")
pattern_aiac2 = re.compile("((火蔓延|受冻|被淹|淹没|倒伏|影响|受损|受旱|缺水|干旱|霜冻|旱|缺墒|过火|烧毁|火场|干枯|报废|枯死|毁坏|毁|受害|损失|烂秧|死苗|遭.{0,2}害|受冻|生.{0,2}病)(.{0,5})(总?面积)?(已)?(合计|超过|.{0,2}至|达到?了?|.*共.?|近|逾|有|大约为|约|为|在|扩大到|.{0,2}估计.?)?([点一两二三四五六七八九十千百万亿零]+|[\d\.．]+)[余多]*[千万亿]*[余多]*(亩|公顷|平方公里|平方千米)[\s]*)|(([点一两二三四五六七八九十千百万亿零]+|[\d\.．]+)[余多]*[千万亿]*[余多]*(亩|公顷|平方公里|平方千米).{0,6}(不同程度)?(受损|受旱|缺水|干旱|霜冻|.旱|缺墒|过火|烧毁|受影响|受害|受冻|干枯|报废|枯死|毁坏|被害|倒伏|受冻|被淹|生.{0,2}病|被砸))")

pattern_asac = re.compile("((成灾)(.{0,5})(总?面积)?(已)?(合计|超过|.{0,2}至|达到?了?|.*共.?|近|逾|有|大约为|约|为|扩大到|.{0,2}估计.?)?([点一两二三四五六七八九十千百万亿零]+|[\d\.．]+)[余多]*[千万亿]*[余多]*(亩|公顷|平方公里|平方千米)[\s]*)|(([点一两二三四五六七八九十千百万亿零]+|[\d\.．]+)[余多]*[千万亿]*[余多]*(亩|公顷|平方公里|平方千米).{0,6}(不同程度)?(成灾))")
pattern_atac = re.compile("((绝收)(.{0,5})(总?面积)?(已)?(合计|超过|达到?了?|.*共.?|近|逾|有|大约为|约|为|扩大到|.{0,2}估计.?)?([点一两二三四五六七八九十千百万亿零]+|[\d\.．]+)[余多]*[千万亿]*[余多]*(亩|公顷|平方公里|平方千米)[\s]*)|(([点一两二三四五六七八九十千百万亿零]+|[\d\.．]+)[余多]*[千万亿]*[余多]*(亩|公顷|平方公里|平方千米).*(绝收))")

pattern_aimp = re.compile("(([点一两二三四五六七八九十千百万亿零]+|[\d\.．]+)[余多]*万*亿*[余多]*(名|个)?.{0,5}(人|群众|人员|学生|旅客|市民|工人|居民|村民|儿童|游客|民众|牧民|老妇|同志|民工|男子|女子)[次口]?(不同程度)?(.{0,5})(受.{0,10}害|受灾|受困|被困|滞留|受影响|被.*埋|.{0,6}饮水(发生|受到|受)?(困难|影响)|被.{0,3}困|无法出行|受损失|生活困难)[\s]*|(受灾|受困|滞留|受影响|被埋|饮水困难|人饮困难|被.{0,3}困|影响).{0,5}(人口|群众|人员|学生|旅客|市民|工人|居民|村民|儿童|游客|民众|牧民|老妇|同志|民工|男子|女子)?.{0,3}([点一两二三四五六七八九十千百万亿零]+|[\d\.．]+)[余多]*万*亿*[余多]*(个?人|名)[次口]?[\s]*)|(受灾(人|群众|人员|学生|旅客|市民|工人|居民|村民|儿童|游客|民众|牧民|老妇|同志|民工|男子|女子)[次口]?([点一两二三四五六七八九十千百万亿零]+|[\d\.．]+)[余多]*万*亿*[余多]*(名|个)?)")
pattern_adp = re.compile("(([点一两二三四五六七八九十千百万亿零]+|[\d\.．]+)[余多]*万*[余多]*(名|个)?.{0,5}(人|群众|人员|学生|旅客|市民|工人|居民|村民|儿童|游客|民众|牧民|老妇|同志|民工|男子|女子)(不幸)?(因.+)?.{0,5}(当场)?(而)?(死亡|遇难|丧生|罹难|牺牲|死|身亡)[\s]*|(死|死亡|遇难|丧生|罹难|牺牲).{0,5}(人口|群众|人员|学生|旅客|市民|工人|居民|村民|儿童|游客|民众|牧民|老妇|同志|民工|男子|女子)?.{0,3}([点一两二三四五六七八九十千百万亿零]+|[\d\.．]+)[余多]*万*[余多]*(个?人|名)[\s]*)|((死|死亡|遇难|丧生|罹难|牺牲)(人|群众|人员|学生|旅客|市民|工人|居民|村民|儿童|游客|民众|牧民|老妇|同志|民工|男子|女子)[次口]?([点一两二三四五六七八九十千百万亿零]+|[\d\.．]+)[余多]*万*亿*[余多]*(名|个)?)|(([点一两二三四五六七八九十千百万亿零]+|[\d\.．]+)(具|位|个)?(遇难者|尸体|遗体))")
pattern_amp = re.compile("(([点一两二三四五六七八九十千百万亿零]+|[\d\.．]+)[余多]*万*[余多]*(名|个)?.{0,5}(人|群众|人员|学生|旅客|市民|工人|居民|村民|儿童|游客|民众|牧民|老妇|同志|民工|男子|女子).{0,4}(失踪|失联|下落不明)[\s]*|(失踪|失联|下落不明).{0,5}(人口|群众|人员|学生|旅客|市民|工人|居民|村民|儿童|游客|民众|牧民|老妇|同志|民工|男子|女子)?.{0,3}([点一两二三四五六七八九十千百万亿零]+|[\d\.．]+)[余多]*万*[余多]*(个?人|名)[\s]*)|((失踪|失联|下落不明)(人|群众|人员|学生|旅客|市民|工人|居民|村民|儿童|游客|民众|牧民|老妇|同志|民工|男子|女子)[次口]?([点一两二三四五六七八九十千百万亿零]+|[\d\.．]+)[余多]*万*亿*[余多]*(名|个)?)")
pattern_ainp = re.compile("(([点一两二三四五六七八九十千百万亿零]+|[\d\.．]+)[余多]*万*[余多]*(名|个)?.{0,5}(人|群众|人员|学生|旅客|市民|工人|居民|村民|儿童|游客|民众|牧民|老妇|同志|民工|男子|女子).{0,2}(不同程度)?受?.{0,3}(受伤|重伤|轻伤|伤)[\s]*|受?(受伤|重伤|轻伤|伤).{0,5}(人口|群众|人员|学生|旅客|市民|工人|居民|村民|儿童|游客|民众|牧民|老妇|同志|民工|男子|女子)?.{0,3}([点一两二三四五六七八九十千百万亿零]+|[\d\.．]+)[余多]*万*[余多]*(个?人|名)[\s]*)|((受伤|重伤|轻伤|伤)(人|群众|人员|学生|旅客|市民|工人|居民|村民|儿童|游客|民众|牧民|老妇|同志|民工|男子|女子)[次口]?([点一两二三四五六七八九十千百万亿零]+|[\d\.．]+)[余多]*万*亿*[余多]*(名|个)?)")
pattern_atp = re.compile("(([点一两二三四五六七八九十千百万亿零]+|[\d\.．]+)[余多]*万*[余多]*(名|个)?.{0,5}(人|群众|人员|学生|旅客|市民|工人|居民|村民|儿童|游客|民众|牧民|老妇|同志|民工|男子|女子).*(转移|撤离|被疏散)+[\s]*|(撤离|转移|疏散|安置|转运).{0,5}(人口|群众|人员|学生|旅客|市民|工人|居民|村民|儿童|游客|民众|牧民|老妇|同志|民工|男子|女子)?.{0,3}([点一两二三四五六七八九十千百万亿零]+|[\d\.．]+)[余多]*万*[余多]*(个?人|名)[次口]?[\s]*)|((撤离|转移|疏散|安置|转运)(人|群众|人员|学生|旅客|市民|工人|居民|村民|儿童|游客|民众|牧民|老妇|同志|民工|男子|女子)[次口]?([点一两二三四五六七八九十千百万亿零]+|[\d\.．]+)[余多]*万*亿*[余多]*(名|个)?)")

pattern_ae = re.compile("(经济)?(损失|亏损|(受损|损失)金额)(.{0,5})?([点一两二三四五六七八九十千百万亿零]+|[\d\.．]+)[余多]*[千万亿]*[余多]*(元|人民币)*[\s]*")
pattern_ahc = re.compile("((近)?(([点一两二三四五六七八九十千百万亿零]+|[\d\.．]+)[余多]*万*亿*[余多]*(处|栋|间|幢|户|座)?)+(居民)?(房间|房屋|建筑|.{0,4}房).{0,3}(不同程度)?.{0,2}(倒塌|垮塌|压垮)[\s]*|(居民)?(房间|房屋|建筑|.*房)?(倒塌|垮塌)(居民)?(房间|房屋|建筑|.*房)?(近)?(([点一两二三四五六七八九十千百万亿零]+|[\d\.．]+)[余多]*万*亿*[余多]*(栋|间|幢|户|座|处))+(居民)?(房间|房屋|建筑|.*房)?[\s]*)|((房间|房屋|建筑|.*房)(([点一两二三四五六七八九十千百万亿零]+|[\d\.．]+)[余多]*万*亿*[余多]*(处|栋|间|幢|户|座)?)+(倒塌|垮塌|被?压垮))")
pattern_ahc2 = re.compile("((近)?(([点一两二三四五六七八九十千百万亿零]+|[\d\.．]+)[余多]*万*亿*[余多]*(处|栋|间|幢|户|座)?)+(居民)?(房间|房屋|建筑|.{0,4}房).{0,3}(不同程度)?.{0,2}(损伤|受损|损毁|损坏|毁坏|倒损|损失|损破|被.{0,2}坏|.毁)[\s]*|(房间|房屋|建筑|.*房)?(损|受损|损毁|损坏|毁坏|倒损|损失|损破|.坏|.毁)(居民)?(房间|房屋|建筑|.*房)?.{0,2}(近|累计)?(([点一两二三四五六七八九十千百万亿零]+|[\d\.．]+)[余多]*万*亿*[余多]*(栋|间|幢|户|座))+(房间|房屋|建筑|.*房)?[\s]*)|((房间|房屋|建筑|.*房)(([点一两二三四五六七八九十千百万亿零]+|[\d\.．]+)[余多]*万*亿*[余多]*(栋|间|幢|户|座)?)+(受损|损毁|损坏|毁坏|倒损|损失|损破|.坏|.毁))")

pattern_awd = re.compile("((积水|渍水|水深|被淹)(深|最深处|深处|最深(地段)?)?.{0,5}([点一两二三四五六七八九十千百万亿零]+|[\d\.．]+).{0,1}(米|厘米|公分|cm|CM|m))|(([点一两二三四五六七八九十千百万亿零]+|[\d\.．]+).{0,1}(米|厘米|公分|cm|CM|m).{0,3}(的)?(积水|渍水|淹水))")
pattern_asd = re.compile("((降雪|积雪|雪深)(厚度|深度)?.{0,5}([点一两二三四五六七八九十千百万亿零]+|[\d\.．]+).{0,1}(米|厘米|公分|cm|CM|m))|(([点一两二三四五六七八九十千百万亿零]+|[\d\.．]+).{0,1}(米|厘米|公分|cm|CM|m).{0,3}(的)?(积雪))")

pattern_extra1 = re.compile("(([点一两二三四五六七八九十千百万亿零]+|[\d\.．]+)(死|死亡|遇难|丧生|罹难|牺牲)([点一两二三四五六七八九十千百万亿零]+|[\d\.．]+)(受伤|重伤|轻伤|伤))")

pattern_extra2 = [re.compile("(积水|渍水|水深|被淹)"),re.compile("(深|最深处|深处|最深(地段)?).{0,5}([点一两二三四五六七八九十千百万亿零]+|[\d\.．]+).{0,1}(米|厘米|公分|cm|CM|m)")]

pattern_dict = {"AIAC":pattern_aiac,"AIAC2":pattern_aiac2,"ASAC":pattern_asac,"ATAC":pattern_atac,
                "AIMP":pattern_aimp,"ADP":pattern_adp,"AMP":pattern_amp,"AINP":pattern_ainp,"ATP":pattern_atp,
                "AHC":pattern_ahc,"AHC2":pattern_ahc2,"AE":pattern_ae,
                "AWD":pattern_awd,"ASD":pattern_asd}

pattern_disaster = re.compile("(暴雨|洪|涝|雷|寒|低温|冰|风|雾|霾|冷|冻|雪|旱|泥石流|山体滑坡|雷|雷电|森林(.{0,10})火灾|草原(.{0,10})火灾)")


def has_disaster_info(contents):
    for content in contents:
        lines = re.split('[。｡！!？?]', content)
        for line in lines:
            for key in pattern_dict.keys():
                finds = re.findall(pattern_dict[key],line)
                if(len(finds) > 0):
                    return True
    return False

def disaster_info(contents):
    d = {key:0 for key in pattern_dict.keys()}
    for content in contents:
        lines = re.split('[。｡！!？?]', content)
        for line in lines:
            for key in pattern_dict.keys():
                finds = re.findall(pattern_dict[key],line)
                d[key] += len(finds)
    return d

def disaster_info_num(contents):
    d = disaster_info(contents)
    print(d)
    return sum(d.values())


if __name__ == '__main__':
    s = """　中新网3月6日电 据民政部网站消息，经核定，2月份是南方低温损失较重，北方冬麦区旱情缓解。2月4-20日，南方地区出现较为频繁降温过程，最大降温幅度普遍在10度以上，部分地区降温幅度达18度，安徽、浙江、湖北、湖南、贵州等地发生低温冷冻，共造成10人死亡，1.3万人紧急转移安置，茶叶、油菜等经济作物受冻，部分电力、通信基础设施受损。其中，2月4-7日中东部遭遇大范围雨雪天气过程，对春运返程交通造成较大影响。但同时，受此次雨雪天气过程和16-18日再次出现的较大范围降水过程影响，河北、山西、山东、河南、陕西等北方冬麦区的旱情也得到有效缓解。"""
    print(disaster_info([s]))